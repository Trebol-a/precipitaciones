name: Get Precipitaciones
on:
  schedule:
    - cron: '*/15 * * * *'  # Cada 15 minutos
  workflow_dispatch:  # Permite ejecutar manualmente desde GitHub
jobs:
  get-data:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Create data directory
      run: mkdir -p data
        
    - name: Install dependencies
      run: pip install -r requirements.txt
        
    - name: Run script
      run: python get_precipitaciones.py
        
    - name: Cleanup old files
      run: |
        python - <<EOF
        import os
        import datetime
        from pathlib import Path

        # Configuración
        MAX_AGE_DAYS = 7  # Ajusta este valor según necesites
        DATA_DIR = "data"

        current_time = datetime.datetime.now()
        data_path = Path(DATA_DIR)

        for file_path in data_path.glob('*'):
            if file_path.is_file():
                file_modified = datetime.datetime.fromtimestamp(file_path.stat().st_mtime)
                age = (current_time - file_modified).days
                
                if age > MAX_AGE_DAYS:
                    print(f"Eliminando archivo antiguo: {file_path}")
                    file_path.unlink()
        EOF
        
    - name: Commit files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data/
        git commit -m "Update precipitaciones data" -a || echo "No changes to commit"
        git push
